get a point on the path an the next point on the path south east north east south east north east south west north west /*
 percentage = relativeposition relative position * 100 
 
 segment relative segment
 point2d point2 d segpoint seg point relative point2d point2 d on the segment
 npoints n points = owner getpointcount get point count 
 point2d point2 d points = owner getpoints get points 
 
 if npoints n points < 2 new point2d point2 d 0 0 
 
 switch percentage {
 case 0 
 segment = 0 
 segpoint seg point = owner getstartpoint get start point 
 break 
 case 100 
 segment = owner getpointcount get point count 2 
 segpoint seg point = owner getendpoint get end point 
 break 
 default 
 totallength total length = 0d 
 seglength seg length = new npoints n points 1 
 for i=1 i < npoints n points i++ {
 seglength seg length i 1 = geom length points i 1 x points i 1 y points i x points i y 
 totallength total length += seglength seg length i 1 
 }
 relativeprogress relative progress = percentage * totallength total length / 101d 
 segment = 0 
 segmin seg min = 0d 
 for segment=0 segment < seglength seg length length 1 segment++ {
 if segmin seg min + seglength seg length segment > relativeprogress relative progress break 
 segmin seg min += seglength seg length segment 
 }
 
 compute the relative point2d point2 d on the line
 segpoint seg point = new point2d point2 d 
 relativeprogress relative progress = segmin seg min 
 segpoint seg point x = points segment x * seglength seg length segment relativeprogress relative progress + points segment + 1 x * relativeprogress relative progress / seglength seg length segment + 5 
 segpoint seg point y = points segment y * seglength seg length segment relativeprogress relative progress + points segment + 1 y * relativeprogress relative progress / seglength seg length segment + 5 
 
 break 
 }
 
 dimension2ddouble dimension2 d labeldim label dim = label getpreferredsize get preferred size 
 
 line2d line2 d line = new line2d line2 d points segment x points segment y points segment + 1 x points segment + 1 y 
 dir = math atan2 points segment + 1 y points segment y points segment + 1 x points segment x 
 alpha = dir + angle 
 
 point2d point2 d p = new point2d point2 d 
 segpoint seg point x + distance * math cos alpha 
 segpoint seg point y + distance * math sin alpha 
 
 
 if p x >= segpoint seg point x {
 if p y >= segpoint seg point y {
 south east
  east
 new point2d point2 d p x p y 
 } else {
 north east
  east
 new point2d point2 d p x p y labeldim label dim height 
 }
 } else {
 if p y >= segpoint seg point y {
 south west
  west
 new point2d point2 d p x labeldim label dim width p y 
 } else {
 north west
  west
 new point2d point2 d p x labeldim label dim width p y labeldim label dim height 
 }
 }*/ 
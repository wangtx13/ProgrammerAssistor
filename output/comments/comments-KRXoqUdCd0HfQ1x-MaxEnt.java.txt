indexed by <labelindex <label index featureindex> feature index> the default feature is always the feature with highest index 		assert getnumcols get num cols == defaultfeatureindex+1 default feature index+1 arrayoutofbounds out of bounds if pipe has grown since training numfeatures num features = getalphabet get alphabet size + 1 make sure the feature vector's feature dictionary matches what we are expecting from our data pipe and thus our notion of feature probabilities include the feature weights according to each label move scores to a range where exp is accurate and normalize xxxnan xxx na n assert !double ! isnan is na n scores modified by limin yao to deal with decreasing the peak of some labels scores should be divided by temperature scores are sum of weighted features move scores to a range where exp is accurate and normalize xxxnan xxx na n assert !double ! isnan is na n scores modified by limin yao using temperature classification score getclassificationscores get classification scores instance scores create and a classification include the feature weights according to each label printrank print rank added by limin yao include the feature weights according to each label do not deal with the default feature include the feature weights according to each label do not deal with the default feature 
this should never be set by a classifiertrainer classifier trainer it should be used in conjunction with a classifier's featureselection feature selection or perhaps it should be removed from here and there should be a classifiertrainer classifier trainer train instancelist instance list featureselection feature selection xxx x x x not very useful should perhaps be removed pipe is never set if you use this constructor xxx perhaps split these out into a utility the generator of all random ness used here includes a alphabet gaussian mean on the sum of alphas gaussian variance on the sum of alphas classcentroiddistribution centroid distribution print should we really be so shallow as to not make new copies of these following instance variables? akm 1/2008 todo t o d o this should be renamed addpiped add piped iterator<instance> iterator< instance> ii for debug out add instance + pipedinstanceiterator piped instance iterator next getname get name gsc to add one instance at a time gsc 			throw new illegalargumentexception illegal argument alphabets don't match instance + 					instance getalphabets get alphabets + instancelist instance list +this getalphabets get alphabets once it is added to an instancelist instance list generally speaking the instance shouldn't change there are exceptions and for these you can instance unlock then instance lock again call the add above and make sure we correctly handle adding the first instance to this list if for some reason a subclass of instancelist instance list refuses to add this instance be sure not to do the rest default weight is 1 0 for everything not in the hashmap hash map but retain all other instance variables remove this it seems like too specialized behavior to be here intentionally add some noise into the data the real random ratio added by fuchun peng sept 2003 		arraylist 		 list new_instances = new arraylist list instances size 		system 		 out noise_instance_num + / + instance_size gsc parameterizing 	system 	 out i + + randindex rand index 		for i=0 i<randnumlist size i++ { 			int index = randnumlist get i intvalue value 			system 			 out i + + index + + inst gettarget get target tostring to 			+ + targets lookuplabel lookup label randindex rand index 			system 			 out i + + index + + inst gettarget get target tostring to + + targets lookupobject lookup randindex rand index a precursor to cloning subclasses of instancelist instance list don't copy these because its empty! instweights inst weights == ? hashmap<instance hash map< instance double> instweights inst weights clone xxx should the featureselection feature selection and perlabel per label be cloned? note that roostingtrainer roosting trainer currently depends on not cloning its splitting note that we are passing on featureselection feature selection here fill maxind with the highest instance index to go in each corresponding instancelist instance list this gives a slight bias toward putting an extra instance in the last instancelist instance list will leave ununsed instances if sum of counts != this size ! transfer weights? added by gary ghuang@cs umass edu move to instancelistutils instance list utils added by gary ghuang@cs umass edu make sure rounding didn't mess things up do sampling added by fuchun weights of 1 0 are not explicitly stored in the hash if the weights hash does not we are done otherwise see if there is a weight currently set if there is no value set or the value is 1 0 we're done otherwise remove the value initialize the weights hash if it does not add the new value overriding any previous value xxx we allow a vocabulary here? see crf3 c r f3 serialization of instancelist instance list added culotta@cs umass edu train on folds index index+numtrainfolds index+num train folds test on rest i'm not sure these best belong here on the other hand it is easy to find and centrally located here akm a k m jan 2006 
used in readresolve read resolve to distinguish persistent instances todo t o d o precondition doesn't seem like the best name for this because if we don't fail we pass thru consider alternatives skipiftrue skip if passthru pass thru skippredicate skip predicate todo t o d o actually we might really want multiple different like this a if drop this instance and go on to next b if pass through unchanged current todo t o d o really this should be 'protected' but isn't for historical reasons todo t o d o consider naming this simply iterator todo t o d o do we really want to encourage behavior like this? consider removing this this only works properly if the pipe is one to one if this pipe produces that use a alphabet this that dictionary even if this particular pipe doesn't use a alphabet it may non if passing through it use a dictionary this should not be called until the dictionary is really needed because it may set off a chain of events that resolve the dictionaries of an entire pipeline and generally this resolution should not take place until the pipeline is completely in place and pipe is being called xxx perhaps desire to wait until pipe is being called is unrealistic and unnecessary for debugging the instanceiterator instance iterator used to implement the one to one pipe behavior serialization out *** pipe readresolve read resolve instance id= + instanceid instance out *** pipe readresolve read resolve resolving to previous instance instance id= + instanceid instance out *** pipe readresolve read resolve new instance instance id= + instanceid instance 
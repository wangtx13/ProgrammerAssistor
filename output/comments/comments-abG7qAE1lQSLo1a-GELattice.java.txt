input length + 1 the model number of states in the fst f s t dynamic programming lattice cache of dot produce between violation and constraint features lattice todo t o d o maybe this should be cached? separate lists for constraints that look at one vs two states check constraints gammas xis fvs speed things up by giving the constraints an opportunity to cache for example which constrained input features appear in this featurevector feature vector calculate only once \sum_y_{i 1} w_a y_{i 1} y_i avoid recomputing one state constraint features #labels times combine the one and two state constraint feature values update the dynamic programming table calculate only once \sum_y_{i+1} w_b y_i y+i constraint feature values cached in forward pass compute and update gradient! sum of marginal probabilities should be equal to marginal prob should be equal to marginal prob ip > input position a vector of doubles since for each node we need to keep track of the alpha beta values of state@ ip+1 
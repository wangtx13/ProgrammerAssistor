draw abstractfigure figure draw attributedfigure attributed figure draw bezierfigure bezier figure bezierfigure bezier figure attributekey attribute key closed c l o s e d bezierpath bezier path path bezierfigure bezier figure bezierfigure bezier figure isclosed is closed connector findconnector find connector geom point2d point2 d p connectionfigure connection figure prototype connector findcompatibleconnector find compatible connector connector c isstart is start drawstroke draw stroke graphics2d graphics2 d g drawcaps draw caps graphics2d graphics2 d g drawfill draw fill graphics2d graphics2 d g contains geom point2d point2 d p canconnect can connect collection createhandles create handles detaillevel detail level geom rectangle2d rectangle2 d getbounds get bounds geom rectangle2d rectangle2 d getfiguredrawbounds get figure draw bounds validate bezierpath bezier path getbezierpath get bezier path geom point2d point2 d getpointonpath get point on path relative flatness basicsetbezierpath basic set bezier path bezierpath bezier path newvalue new value isclosed is closed setclosed set closed newvalue new value basicsetattribute basic set attribute attributekey attribute key key newvalue new value basicsetbounds basic set bounds geom point2d point2 d anchor geom point2d point2 d basictransform basic transform geom affinetransform affine transform tx invalidate invalidatecappedpath invalidate capped path bezierpath bezier path getcappedpath get capped path layout addnode add node bezierpath bezier path node p addnode add node index bezierpath bezier path node p basicaddnode basic add node bezierpath bezier path node p basicaddnode basic add node index bezierpath bezier path node p setnode set node index bezierpath bezier path node p basicsetnode basic set node index bezierpath bezier path node p bezierpath bezier path node getnode get node index geom point2d point2 d getpoint get point index geom point2d point2 d getpoint get point index coord setpoint set point index coord geom point2d point2 d p basicsetpoint basic set point index geom point2d point2 d p basicsetpoint basic set point index coord geom point2d point2 d p basicsetstartpoint basic set start point geom point2d point2 d p basicsetendpoint basic set end point geom point2d point2 d p geom point2d point2 d getstartpoint get start point geom point2d point2 d getendpoint get end point findnode find node geom point2d point2 d p removeallnodes remove all nodes removenode remove node index findsegment find segment geom point2d point2 d find basicjoinsegments basic join segments geom point2d point2 d join basicsplitsegment basic split segment geom point2d point2 d split basicremovenode basic remove node index basicremoveallnodes basic remove all nodes getnodecount get node count getpointcount get point count bezierfigure bezier figure clone restoreto restore to geometry getrestoredata get restore data geom point2d point2 d chop geom point2d point2 d p geom point2d point2 d getcenter get center geom point2d point2 d getoutermostpoint get outermost point basicjoinsegments basic join segments geom point2d point2 d join tolerance basicsplitsegment basic split segment geom point2d point2 d split tolerance handlemouseclick handle mouse click geom point2d point2 d p event mouseevent mouse event evt drawingview drawing view view write domoutput dom output out io ioexception i o writepoints write points domoutput dom output out io ioexception i o read dominput dom input in io ioexception i o readpoints read points dominput dom input in io ioexception i o all io serializable cloneable figure domstorable dom storable direct known subclasses linefigure line figure bezierfigure bezier figure attributedfigure attributed figure see also serialized form the bezierpath bezier path creates a new instance creates a new instance the figures connector for the specified location by default a chopdiamondconnector chop diamond connector is specified by findconnector find connector in figure findconnector find connector in abstractfigure figure p the location of the connector prototype the prototype used to create a connection or if unknown this allows for specific connectors for different connection figures see also chopdiamondconnector chop diamond connector description copied from figure gets a compatible connector if the provided connector is part of this figure the connector if the provided connector is part of another figure a connector with the same semantics for this figure if no compatible connector is available specified by findcompatibleconnector find compatible connector in figure findcompatibleconnector find compatible connector in abstractfigure figure description copied from attributedfigure attributed figure this is called by draw to draw the text of the figure attributedfigure attributed figure configures the graphics2d graphics2 d with the text_color attribute before calling this if the text_color attribute is this is not called specified by drawstroke draw stroke in attributedfigure attributed figure description copied from attributedfigure attributed figure this is called by draw to draw the fill area of the figure attributedfigure attributed figure configures the graphics2d graphics2 d with the fill_color attribute before calling this if the fill_color attribute is this is not called specified by drawfill draw fill in attributedfigure attributed figure description copied from figure checks if a point is contained by the figure this is used for hit testing by tool's checks if this figure can be connected by default filled bezierfigures bezier figures can be connected specified by canconnect can connect in figure canconnect can connect in abstractfigure figure description copied from figure creates handles used to manipulate the figure specified by createhandles create handles in figure createhandles create handles in abstractfigure figure detaillevel detail level the detail level of the handles usually this is 0 for bounding box handles and 1 for point handles a collection of handles see also handle description copied from figure the logical bounds of the figure as a rectangle the logical bounds are used by some handle for adjusting the figure getfiguredrawbounds get figure draw bounds in attributedfigure attributed figure validate in abstractfigure figure a clone of the bezier path of this figure sets the bezier path without cloning and without firing events description copied from attributedfigure attributed figure sets an attribute of the figure attributekey attribute key name and semantics are defined by the implementing the figure specified by basicsetattribute basic set attribute in figure basicsetattribute basic set attribute in attributedfigure attributed figure see also attributekey attribute key set draw figure t description copied from figure sets the logical bounds of the figure and of its decorator figure this is used by tool's which create a new figure and by tool's which connect a figure to another figure this is a basic operation which does not fire events anchor the start point of the bounds the end point of the bounds see also figure getbounds get bounds description copied from abstractfigure figure moves the figure this is the that subclasses override this is a basic operation for which no events are fired specified by basictransform basic transform in figure specified by basictransform basic transform in abstractfigure figure tx the transformation description copied from abstractfigure figure informs that a figure needs to be redrawn specified by invalidate in figure invalidate in abstractfigure figure a path which is cappedpath capped path at the ends to prevent it from drawing under the end caps adds a control point adds a node to the list of points adds a control point adds a control point sets a control point sets a control point gets a control point convenience for getting the point coordinate of the first control point of the specified node gets the point coordinate of a control point sets the point coordinate of a control point sets the point coordinate of control point 0 at the specified node sets the point coordinate of a control point convenience for setting the point coordinate of the start point convenience for setting the point coordinate of the end point convenience for getting the start point specified by getstartpoint get start point in figure getstartpoint get start point in abstractfigure figure see also figure basicsetbounds basic set bounds geom point2d point2 d geom point2d point2 d convenience for getting the end point specified by getendpoint get end point in figure getendpoint get end point in abstractfigure figure see also figure basicsetbounds basic set bounds geom point2d point2 d geom point2d point2 d finds a control point index 1 if no control point could be found fixme f i x m e move this to bezierpath bezier path removes all points removes the point2d point2 d at the specified index gets the segment of the polyline that is hit by the given point2d point2 d the index of the segment or 1 if no segment was hit xxx x x x move this to bezierpath bezier path joins two segments into one if the given point2d point2 d hits a node of the polyline if the two segments were joined xxx x x x move this to bezierpath bezier path splits the segment at the given point2d point2 d if a segment was hit the index of the segment or 1 if no segment was hit xxx x x x move this to bezierpath bezier path removes the point2d point2 d at the specified index removes the point2d point2 d at the specified index gets the node count gets the point count description copied from figure a clone of the figure specified by clone in figure clone in attributedfigure attributed figure description copied from figure restores the shape of the figure to a previously stored state description copied from figure gets data which can be used to restore the shape of the figure after a basictransform basic transform has been applied to it see also figure basictransform basic transform affinetransform affine transform joins two segments into one if the given point2d point2 d hits a node of the polyline if the two segments were joined splits the segment at the given point2d point2 d if a segment was hit the index of the segment or 1 if no segment was hit handles a mouse click specified by handlemouseclick handle mouse click in figure handlemouseclick handle mouse click in abstractfigure figure p the location of the mouse event evt the mouse event view the drawing view which is the source of the mouse event if the figure consumed the mouse click specified by write in domstorable dom storable write in attributedfigure attributed figure io ioexception i o io ioexception i o specified by read in domstorable dom storable read in attributedfigure attributed figure io ioexception i o io ioexception i o 
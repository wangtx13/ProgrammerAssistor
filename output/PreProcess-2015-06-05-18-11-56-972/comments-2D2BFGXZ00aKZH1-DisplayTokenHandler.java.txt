{{{ imports }}} {{{ init silly s i l l y allow for anti aliased characters' fuzz }}} {{{ getchunklist get chunk list }}} {{{ handletoken handle token first branch to avoid unnecessary instansiation of breakiterator break iterator split the token but at character breaks not to affect the result of painting {{{ care for unrealistic case to be complete there must be a char break at beginning of token try splitting after the limit to make the chunk shorter anyway there must be a char break at end of token can't split }}} }}} {{{ members don't have chunks longer than a limit to avoid slowing things down for example too chunks are hardly clipped out at rendering {{{ instance variables }}} {{{ createchunk create chunk }}} {{{ initchunk init chunk }}} {{{ initchunks init chunks }}} {{{ mergeadjucentchunks merge adjucent chunks }}} {{{ canmerge can merge }}} {{{ makewrappedline make wrapped line }}} {{{ recalculatetabwidth recalculate tab width if all chunks are recaluculated and the total width fits in wrap margin }}} {{{ endoffsetofwhitespaces end offset of whitespaces }}} {{{ makescreenlineinwrapmargin make screen line in wrap margin there is no line break can't wrap there is no more line break can't wrap {{{ the remaining chunk may be split again to avoid quadratic repeatation of initchunk init chunk which happens when the wrap margin is too small or the virtual space is too wide split it using an assumption that the split at a line break doesn't change the widths of parts before and after the break this can happen if remaining ends with whitespaces }}} fits in the margin no more need to wrap }}} {{{ makescreenline make screen line }}} {{{ linebreaker line breaker {{{ members }}} }}} {{{ linebreakiterator line break iterator can have reached the end of text during baseornext base or next or baseorprevious base or previous which done d o n e here current should last or first based on which was the last direction get characters surrounding the break without altering the current index of underlying text when breaking at whitespace jedit j edit treat the whitespaces as belonging to the previous line and make them editable assuming that breaking without white spaces are wanted only for some natural languages which uses non ascii a s c i i characters otherwise keep traditional jedit j edit behavior break only at whitespaces workarounds for the problem reported at sf s f net bug #3497312 unexpected softwrap in contracted words with â€™ as apostrophe sf s f net bug #3488310 unexpected soft wrap happens at closing ldquo probably the cause is in the of breakiterator break iterator for line breaks some similer problems are also reported in bugs sun com http www google co jp/search?q=site%3abugs jp/search?q=site%3 abugs sun com+breakiterator+getlineinstance com+ break iterator+get line instance there seems to be some problems in handling of quotation marks this test excludes cjk c j k characters which may come after a closing quote retrieves char at specified index without altering the current index of characteriterator character iterator the following quotation marks are accumulated cases that exhibits the problem under a local test on jre j r e 7u3 with samples taken from wikipedia http en wikipedia org/wiki/non org/wiki/ non english_usage_of_quotation_marks the last check for enclosing whitespace avoids unwanted rejection of line breaks in cjk c j k text which don't have such whitespace where default behavior of breakiterator break iterator is reasonable look farther in case where the opening quote is enclosed by something like a opening parenthesis look farther in case where the closing quote is enclosed by something like a closing parenthesis }}} }}} 
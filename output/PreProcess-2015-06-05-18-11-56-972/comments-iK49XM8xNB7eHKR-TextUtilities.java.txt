{{{ imports }}} to avoid slowdown with large files only scan 10000 lines either way {{{ gettokenatoffset get token at offset }}} {{{ getcomplementarybracket get complementary bracket }}} {{{ findmatchingbracket find matching bracket backwards forwards corresponding character c is no bracket 1 because we've already 'seen' the first bracket get the syntax token at 'offset' only tokens with the same type will be checked for the corresponding bracket {{{ forward search {{{ go on to next line }}} }}} {{{ backward search {{{ go on to previous line }}} }}} nothing found }}} {{{ join }}} {{{ findwordstart find word start {{{ the character under the cursor changes how we behave }}} {{{ whitespace only select other whitespace in this case unless eating only after words word char or symbol stop unless eating only after words we have eaten after word whitespace and now continue until word start }}} {{{ word character stop at next last in writing direction upper case char if camel cased don't stop at every upper case char don't treat nowordsep no word sep as word chars stop at next first in writing direction upper case char if camel cased don't stop at every upper case char word char keep going whitespace include in word if eating but not if only eating after word }}} {{{ symbol whitespace include in word if eating but not if only eating after word }}} }}} {{{ findwordend find word end {{{ the character under the cursor changes how we behave }}} {{{ whitespace only select other whitespace in this case }}} {{{ word character stop at next last upper case char if camel cased don't stop at every upper case char don't treat nowordsep no word sep as word chars stop at next first upper case char if camel caseg don't stop at every upper case char whitespace include in word if eating }}} {{{ symbol if we see whitespace set flag }}} }}} {{{ getchartype get char type }}} {{{ spacestotabs spaces to tabs }}} {{{ tabstospaces tabs to spaces }}} {{{ format }}} {{{ indexignoringwhitespace index ignoring whitespace }}} {{{ ignoringwhitespaceindex ignoring whitespace index }}} {{{ getstringcase get case }}} {{{ totitlecase to title case }}} {{{ escapetext escape text make sure that every \e \ e appearing in the text is escaped and then surround it with the quotation tags \q \ q and \e \ e }}} {{{ members {{{ formatparagraph format paragraph align everything to paragraph's leading indent do nothing }}} {{{ indexignoringwhitespace index ignoring whitespace align everything to paragraph's leading indent do nothing }}} }}} 
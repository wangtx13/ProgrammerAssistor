{{{ imports }}} {{{ inputhandler input handler constructor }}} {{{ handlekey handle key }}} {{{ processkeyevent process key event if the user pressed eg c+e n n in the search bar we want focus to go back there after the prefix is done }}} {{{ _preprocesskeyevent fix for the bug where key events in jtextcomponents j text components inside views are also handled by the input handler }}} {{{ processkeyeventsub process key event sub we might have been closed as a result of the above this is a weird hack we don't want c+e a to insert 'a' in the search bar if the search bar has focus }}} {{{ getrepeatcount get repeat count }}} {{{ setrepeatcount set repeat count }}} {{{ getlastaction get last action }}} {{{ readnextchar read next char }}} {{{ invokeaction action }}} {{{ invokeaction action /* if buffer insidecompoundedit inside compound edit 
			buffer endcompoundedit end compound edit */ remember the last executed action remember old values in case action changes them execute the action stop people doing dumb stuff like c+enter c+ e n t e r 100 c+n if repeat was originally clear it otherwise it might have been set by the action etc first of all if this action set a readnextchar read next char do not clear the repeat }}} {{{ invokelastaction last action }}} {{{ instance variables }}} {{{ userinput user input /* buffer buffer = view getbuffer get buffer 
		if !buffer insidecompoundedit inside compound edit 
			buffer begincompoundedit begin compound edit */ stop people doing dumb stuff like c+enter c+ e n t e r 100 c+n }}} {{{ invokereadnextchar read next char /* if buffer insidecompoundedit inside compound edit 
			buffer endcompoundedit end compound edit */ this might be a bit slow if __char__ occurs a lot }}} 
/*
		type /*
		 type conversion identifiers an assignment a s s i g n m e n t allows conversions that would
		normally happen on assignment a cast c a s t performs numeric conversions to smaller
		types as in an explicit cast and things allowed only in variable and array
		declarations e g byte b = 42 
	*/ /* should check for strict here and limit to isjavaassignable is assignable */ /*
			assignment /*
			 assignment to loose type defer to bsh extensions
			note extensions
			 note we could shortcut this here 
			if lhstype lhs type == 
			rather than forcing another round it's not strictly a issue 
			so does it belong here?
		*/ rhs type corresponds to type of primitive n u l l assignable to any type handle primitive widening conversions jls j l s 5 1 2 assignment to loose type defer to bsh extensions prim can be boxed and assigned to prim numeric type can be boxed and assigned to number general case prim type to wrapper or vice versa i don't know if this is faster than a flat list of 'if's like above wrappermap wrapper map maps both prim to wrapper and wrapper to prim types so this test is symmetric /*fromvalue*/ /*from value*/ /*checkonly*/ /*check only*/ this should not happen with checkonly check only /*checkonly*/ /*
		notes /*
		 notes this is currently responsible for auto boxing/unboxing
		conversions where does that need to go?
	*/ /*
			lots /*
			 lots of preconditions checked here 
			once 
			 once things are running smoothly we might comment these out
			 that's what assertions are for 
		*/ assignment to loose type type or exactly same type casting to primitive type both primitives do primitive cast wrapper to primitive convert value to primitive and check/cast it r = checkonly check only ? valid_cast must be in checkonly check only cannot cast from arbitrary to primitive else casting to reference type casting from primitive or to reference type cast from primitive to wrapper type primitive to wrapper type primitive not or to type box it primitive to arbitrary type allow primitive casttotype cast to type to handle it as well as cases of primitive n u l l and primitive v oid if type already assignable no cast necessary we do this last to allow various errors above to be caught e g cast primitive to would pass this can we use the proxy mechanism to cast a bsh this to the correct interface? both numeric wrapper types? try numeric style promotion wrapper cast 
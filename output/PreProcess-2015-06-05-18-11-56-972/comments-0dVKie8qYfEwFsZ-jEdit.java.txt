{{{ imports }}} {{{ getversion get }}} {{{ getbuild get build major minor <99 = prex pre x 99 = bug fix }}} {{{ {{{ check for 1 7 or later }}} later on we need to know if certain is called from the thread on mac different rules should apply macos mac o s users expect the app to keep running after all windows are closed fix x11 windows {{{ parse command line open initial view? script to run }}} {{{ we need these initializations very early on }}} {{{ try connecting to another running jedit j edit instance socket is closed via beanshell bean shell script below block until its closed ok this one seems to confuse newbies endlessly so log it as notice n o t i c e not e r r o r if no server running and user runs jedit quit just exit }}} don't show splash screen if there is a named 'nosplash' in the settings directory {{{ settings migration windows check introduced in 5 0pre1 macos mac o s check introduced in 4 3 }}} {{{ initialize settings directory write a warning message }}} {{{ get things rolling }}} {{{ initialize server }}} {{{ do more stuff other one time migration services buffer sort }}} {{{ activate plugins that must be activated at startup }}} {{{ load macros and run startup scripts after plugins and settings are loaded }}} {{{ run script specified with run= parameter }}} create dynamic actions for switching to saved layouts the list of saved layouts is retrieved from the docking framework which can be provided by a plugin so this must be called only after the plugins are loaded open files create the view and hide the splash screen }}} {{{ property {{{ getcurrentlanguage get current language }}} {{{ getproperties get properties }}} {{{ getproperty get property }}} {{{ getproperty get property }}} {{{ getproperty get property }}} {{{ getbooleanproperty get property }}} {{{ getbooleanproperty get property }}} {{{ getintegerproperty get property }}} {{{ getintegerproperty get property }}} {{{ getdoubleproperty get property }}} {{{ getfontproperty get font property }}} {{{ getfontproperty get font property }}} {{{ getcolorproperty get color property }}} {{{ getcolorproperty get color property }}} {{{ setcolorproperty set color property }}} {{{ setproperty set property }}} {{{ settemporaryproperty set temporary property }}} {{{ setbooleanproperty set property }}} {{{ setintegerproperty set property }}} {{{ setdoubleproperty set property }}} {{{ setfontproperty set font property }}} {{{ unsetproperty unset property }}} {{{ resetproperty reset property }}} {{{ propertieschanged properties changed give all text areas the same font defaults put textfield text field font font enable/disable enable/ disable tooltips we do this here instead of adding buffers to the bus }}} }}} property fold end {{{ plugin management {{{ getnotloadedpluginjars get not loaded plugin j a rs }}} {{{ getplugin get plugin }}} {{{ getplugin get plugin }}} {{{ getplugins get plugins }}} {{{ getpluginjars get plugin j a rs }}} {{{ getpluginjar get plugin j a r }}} {{{ addpluginjar add plugin j a r }}} {{{ addpluginjarsfromdirectory add plugin j a rs from directory }}} {{{ removepluginjar remove plugin j a r }}} }}} {{{ action {{{ getactioncontext get action context }}} {{{ addactionset add action set }}} {{{ removeactionset remove action set }}} {{{ getbuiltinactionset get built in action set }}} {{{ getactionsets get action sets }}} {{{ getaction get action }}} {{{ getactionsetforaction get action set for action }}} {{{ getactionnames get action names }}} }}} {{{ edit mode {{{ reloadmodes reload modes {{{ load the global catalog first }}} {{{ load user catalog second so user modes override global modes create dummy catalog }}} this reloads the token marker and sends a message which causes edit panes to repaint their text areas }}} {{{ getmode get mode }}} {{{ getmodes get modes }}} }}} {{{ buffer creation {{{ openfiles open files }}} {{{ openfile open these additional names will be treated just as if they had been passed on the command line }}} {{{ opentemporary open temporary }}} {{{ committemporary commit temporary send full range of events to avoid breaking plugins }}} {{{ newfile new don't want 'new ' new file' to create a read only buffer if current is on sql s q l vfs v f s or something find the highest untitled n /* if never mark untitled buffers dirty 
					 * is selected we might have contents in non dirty
					 * untitled buffers we must clear those contents
					 * if user requested new 
					 */ find the highest untitled n }}} }}} {{{ buffer management {{{ closebuffer close buffer wait for pending i/o i/ o requests }}} {{{ closebuffer close buffer no need to check every bufferset buffer set since it's view scope the buffer is in several view we can remove it from bufferset buffer set }}} {{{ _closebuffer can happen if the user presses c+w twice real quick and the buffer has unsaved changes in case of a temporary buffer just close it fixme f i x m e duplicate code? same is done in removebufferfromlist remove buffer from list buffer }}} {{{ closeallbuffers close all buffers wait for pending i/o i/ o requests close remaining buffers the close dialog only deals with dirty ones zero it here so that buffertabs buffer tabs doesn't have any problems }}} {{{ saveallbuffers save all buffers }}} {{{ saveallbuffers save all buffers }}} {{{ reloadallbuffers reload all buffers save caret info buffer load will load it }}} {{{ _getbuffer paths on case insensitive filesystems are stored as lower case in the hash }}} {{{ getbuffer get buffer }}} {{{ getbuffers get buffers }}} {{{ getbuffercount get buffer count }}} {{{ getfirstbuffer get first buffer }}} {{{ getlastbuffer get last buffer }}} {{{ movebuffer move buffer }}} {{{ getbuffersetmanager get buffer set manager }}} {{{ getpropertymanager get property manager }}} {{{ checkbufferstatus check buffer status still need to call the status check even if the option is off so that the write protection is updated if it changes on disk auto reload changed buffers? the problem with this is that if we have two edit panes looking at the same buffer and the is reloaded both will jump to the same location no automatic reload even if general setting is don't notify user if do nothing was chosen }}} }}} {{{ view {{{ getinputhandler get input handler }}} /* newviewtest new view test 
	{
		long time = currenttimemillis current time millis 
		for i = 0 i < 30 i++ 
		{
			buffer 
		{
			 buffer b = newfile new 
			b insert 0 x 
			new view b 
		}
		system 
		}
		 err currenttimemillis current time millis time 
	} */ {{{ newview new view mark the perspective as dirty unless the new view is created during jedit j edit startup by the loading of the perspective show tip of the day don't show the welcome message if jedit j edit was started with the nosettings switch }}} {{{ closeview close view }}} {{{ getviews get views }}} {{{ getviewcount get view count }}} {{{ getfirstview get first view }}} {{{ getlastview get last view }}} {{{ getactiveview get active view eg user just closed a view and didn't focus another }}} }}} {{{ miscellaneous {{{ relocatesettings relocate settings }}} {{{ isstartupdone is startup done }}} {{{ ismainthread is thread }}} {{{ isbackgroundmode is background mode }}} {{{ showmemorydialog show memory dialog }}} {{{ getjedithome get j edit home }}} {{{ getsettingsdirectory get settings directory }}} {{{ getjarcachedirectory get j a r cache directory }}} {{{ backupsettingsfile backup settings sweet savebackup save backup will create backupdir backup dir if it doesn't }}} {{{ savesettings save settings }}} {{{ exit close dialog view close call need a view wait for pending i/o i/ o requests create a new editorexitrequested editor exit requested send editorexitrequested editor exit requested check if the exitrequest exit request has been cancelled if so do not proceed anymore in the exiting even if reallyexit really exit is we still exit properly if background mode is off close all buffers if we are running in background mode and reallyexit really exit was not specified then here in this case we can't directly call view close we have to call closeview close view for all open views save settings in case user kills the backgrounded jedit j edit process send editorexiting editor exiting save view properties here stop autosave timer stop server stop all plugins save settings close activity log stream byebye }}} {{{ geteditserver get edit server }}} {{{ visit }}} {{{ getregisterstatusprompt get register status prompt }}} {{{ getkeymapmanager get key map manager }}} {{{ logtime log time }}} }}} miscellaneous fold end {{{ members {{{ updateposition update position }}} {{{ loadmode load mode /* */ }}} {{{ addpluginprops add plugin props }}} {{{ removepluginprops remove plugin props }}} {{{ addpluginlocalizationprops add plugin localization props }}} {{{ removepluginlocalizationprops remove plugin localization props }}} {{{ pluginerror plugin }}} {{{ setactiveview set active view }}} {{{ getactiveviewinternal get active view internal }}} }}} {{{ members {{{ variables buffer link list makes opentemporary open temporary thread safe view link list }}} {{{ usage }}} {{{ }}} {{{ makeserverscript make server script }}} {{{ initmisc init misc xxx x x x action bar might not be 'temp' add our protocols to net url's u r l's list set the user agent used by the net http h t t p handler /* determine installation directory 
		 * if the jedit home property is set use that 
		 * then look for jedit jar in the classpath 
		 * if that fails assume this is the web start */ if started with jar jedit jar check if web start /* if jedit j edit getresource get resource /modes/catalog != 
				{
					 modes bundled in hence web start
					jedithome start
					j edit home = 
				}
				else */ use user dir as last resort if jedithome j edit home == 	log 	 log log log debug d e b u g jedit j edit web start mode add an editbus edit bus component that will reload edit modes and macros if they are changed from within the editor set the contextclassloader context loader for the jedit j edit thread this way the contextclassloader context loader will be a jarclassloader j a r loader even at plugin activation and the eventqueue event queue can also pick up the jarclassloader j a r loader that's why this call has to be done before the usage of the eventqueue event queue perhaps if xerces wasn't slightly brain damaged we would not need this }}} {{{ getresourceasutf8text get resource as u t f8 text using our charsetencoding charset encoding to reliably detect encoding errors }}} {{{ initsystemproperties init properties }}} {{{ initsiteproperties init site properties site properties are loaded as default properties overwriting jedit's j edit's properties }}} {{{ initresources init resources }}} {{{ initplugins init plugins }}} {{{ inituserproperties init user properties log log log debug d e b u g jedit j edit fnf }}} {{{ initlocalizationproperties init localization properties no need to load english as localization property as it always loaded as default language if it is the default locale it is not an }}} {{{ fontstyletostring font style to }}} {{{ fonttostring font to }}} {{{ initplaf init p l a f do not change anything if look and feel did not change though the cause is not known this must precede uimanager u i manager setlookandfeel set look and feel so that menu bar interaction by alt a l t key interacts with jmenubar j menu bar which uses l f instead of menubar menu bar which we don't use and doesn't use l f the difference of the behavior was seen on sun jre j r e 6u16 on windows xp x p and windows l f a couple of issues here these are fixed first setlookandfeel set look and feel must be called on the edt e d t on initial start up this isn't a problem but initplaf init p l a f is called on propertieschanged properties changed which can happen a lot second this will fail to load the look and feel as set in the lookandfeel look and feel plugin on initial start up because the plugins haven't been loaded yet ignored there really isn't anything to do and this may be bogus the lnf may be from the look and feel plugin same as above there really isn't anything to do and this may be bogus the lnf may be from the look and feel plugin don't worry about this one either	 give all components our colors }}} {{{ getnextuntitledbufferid get next untitled buffer }}} {{{ runstartupscripts run startup scripts /*
		 * force the default encoding to utf u t f 8 temporarily 
		 * the shipped scripts use that encoding so we need
		 * to make sure we can load them correctly if users
		 * want to write script with a different encoding 
		 * they can use buffer local properties on the
		 * script to set it 
		 */ }}} {{{ initproxy init proxy set proxy host set proxy port set non proxy hosts list set proxy authentication not supported? }}} {{{ firewallauthenticator firewall authenticator }}} {{{ finishstartup finish startup treat the elements of additionalfiles additional files just like command line arguments start i/o i/ o threads start edit server {{{ report any plugin errors }}} in one case not a single a w t will have been touched splash screen off + nogui nobackground switches on command line }}} {{{ showpluginerrordialog show plugin dialog }}} {{{ getnotloadedpluginjars get not loaded plugin j a rs }}} {{{ gotomarker goto marker handle line number handle marker can't happen }}} {{{ addbuffertolist add buffer to list {{{ sort buffer list }}} fixes the hang that can occur if we 'save as' to a new filename which requires re sorting }}} {{{ removebufferfromlist remove buffer from list fixes the hang that can occur if we 'save as' to a new filename which requires re sorting }}} {{{ addviewtolist add view to list }}} {{{ removeviewfromlist remove view from list }}} {{{ closeview close view /* exit does editor event save */ coming here means the request has been canceled }}} {{{ loadmodecatalog load mode catalog }}} {{{ initkeybindings init key bindings }}} {{{ composebufferpropsfromhistory compose buffer props from history getselection get selection converts from to selection }}} }}} {{{ myfocusmanager my focus manager }}} {{{ jeditpropertymanager j edit property manager }}} {{{ dockinglayoutsetter docking layout setter }}} 
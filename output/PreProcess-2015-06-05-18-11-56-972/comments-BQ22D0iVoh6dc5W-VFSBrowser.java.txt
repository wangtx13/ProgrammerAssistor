{{{ imports }}} {{{ browser modes }}} {{{ browsedirectoryinnewwindow browse directory in new window this is such a bad way of doing it but oh well }}} {{{ browsedirectory browse directory this is such a bad way of doing it but oh well }}} {{{ getactioncontext get action context }}} {{{ vfsbrowser v f s browser constructor }}} {{{ vfsbrowser v f s browser constructor because its preferred size can be quite wide we don't want it to make the browser way too big so set the preferred width to 0 		filtercheckbox 		filter checkbox setrequestfocusenabled set request focus enabled save the location on close of dockable filterfield filter field geteditor get editor setitem set item new globvfsfilefilter glob v f s filter filter filterfield filter field additem add item filterfield filter field geteditor get editor getitem get item loads the registered vfsfilefilter v f s filter services see vfsbrowser v f s browser browsedirectory browse directory unknown value??!!! }}} {{{ focusondefaultcomponent focus on default component pathfield path field requestfocus request focus }}} {{{ setdefaultfocuscomponent set default focus component }}} {{{ addnotify add notify }}} {{{ removenotify remove notify }}} {{{ handlepropertieschanged handle properties changed }}} {{{ handlebufferupdate handle buffer update }}} {{{ handlepluginupdate handle plugin update /* plugins can be if the vfsbrowser v f s browser menu bar is hidden */ }}} {{{ handlevfsupdate handle v f s update }}} {{{ getview get view }}} {{{ getmode get mode }}} {{{ ismultipleselectionenabled is multiple selection enabled }}} {{{ ishorizontallayout is horizontal layout }}} {{{ getshowhiddenfiles get show hidden files }}} {{{ setshowhiddenfiles set show hidden files }}} {{{ getvfsfilefilter get v f s filter }}} {{{ addvfsfilefilter add v f s filter }}} {{{ setfilenamefilter set filename filter }}} {{{ getdirectoryfield get directory field }}} {{{ getdirectory get directory }}} {{{ directory stack operations }}} {{{ getlastvisitedpath get last visited path }}} {{{ setdirectory set directory }}} {{{ getrootdirectory get root directory }}} {{{ rootdirectory root directory }}} {{{ reloaddirectory reload directory used by ftp f t p plugin to clear directory cache }}} {{{ delete in the previous the first argument was the list now it is a list so the list is not created anymore but for compatibility an empty is used }}} {{{ rename }}} {{{ mkdir if a directory is selected create new dir in there if a is selected create new dir inside its parent path is the currently viewed directory in the browser }}} {{{ newfile new }}} {{{ fileproperties properties }}} {{{ searchindirectory search in directory }}} {{{ searchindirectory search in directory }}} {{{ getbrowserview get browser view }}} {{{ getselectedfiles get selected files }}} {{{ getselectedfiles get selected files }}} {{{ paste }}} {{{ locatefile locate do not change this until all vfs v f s browser tasks are done in threadutilities thread utilities }}} {{{ createpluginsmenu create plugins menu /* we're in a modal dialog */ {{{ new api a p i }}} }}} {{{ addbrowserlistener add browser listener }}} {{{ removebrowserlistener remove browser listener }}} {{{ filesactivated files activated candoubleclickclose can click close set to when enter e n t e r pressed close if this buffer is currently visible in the view if a is selected in open_dialog or save_dialog mode just let the listener s handle it }}} {{{ dispose }}} {{{ move }}} {{{ members this can be untill an user explicitly selects an encoding so that this don't overwrite more accurate encoding information like buffer histories {{{ directoryloaded directory loaded there was an this is the new canonical path ensure consistent history eg we don't want both foo/ and foo to notify listeners that any existing selection has been deactivated turns out under some circumstances this can switch the current buffer in browser b r o w s e r mode in any case this is only needed for the directory chooser why? so we add a check otherwise poor rick will go insane }}} {{{ filesselected files selected }}} {{{ endrequest end request }}} }}} {{{ members {{{ instance variables }}} {{{ createmenubar create menu bar }}} {{{ createtoolbar create tool bar }}} {{{ propertieschanged properties changed }}} /* we do this stuff because the browser is not able to handle
	 * more than one request yet */ {{{ startrequest start request dump stack trace for debugging purposes }}} {{{ updatefilterenabled update filter enabled }}} {{{ maybereloaddirectory maybe reload directory this is a dirty hack and it relies on the fact that updates for parents are sent before updates for the changed nodes themselves if this was not the case the browser wouldn't be updated properly on delete etc to avoid causing '> 1 request' errors don't reload directory if request already active log log log warning w a r n i n g this vfs v f s update request already in progress save a > sends vfs update if a vfs v f s dialog box is shown from the same event frame as the save the vfsupdate v f s update will be delivered before the directory is loaded and before the path is set do not change this until all vfs v f s browser tasks are done in threadutilities thread utilities }}} }}} {{{ inner classes {{{ actionhandler action handler force the editor to refresh depending on look feel filterfield filter field geteditor get editor some comboboxui combo box u i force the editor to refresh ### ugly itemstatechanged item state changed does not seem to get fired }}} {{{ menubutton menu button {{{ menubutton menu button constructor 		setrequestfocusenabled 		set request focus enabled }}} {{{ mousehandler mouse handler }}} {{{ action }}} }}} {{{ commandsmenubutton commands menu button {{{ commandsmenubutton commands menu button constructor }}} browsercommandsmenu browser commands menu popup }}} {{{ pluginsmenubutton plugins menu button {{{ pluginsmenubutton plugins menu button constructor }}} {{{ updatepopupmenu update popup menu }}} {{{ createpopupmenu create popup menu }}} }}} {{{ favoritesmenubutton favorites menu button {{{ favoritesmenubutton favorites menu button constructor }}} {{{ createpopupmenu create popup menu }}} {{{ actionhandler action handler if any directories are selected add them otherwise add current directory }}} }}} {{{ browseractioncontext browser action context in the future we will want something better eg having an 'evt' passed to editaction edit action for now since all browser actions are written in beanshell we set the 'browser' variable directly i guess ideally all browsers should have views but since they don't we just use the active view in that case since some actions depend on a view being there and i don't want to add checks to them all }}} {{{ historycomboboxeditor history combo box editor if we keep the same will cause an event to be fired on the default button of the dialog causing a beep since no is selected this happens when changing the selected item in the combo the combo has not yet fired an itemstatechanged item state changed event so it's not put into non editable mode by the handler above a w t will call setitem set item when the editor loses focus that can cause weird and unwanted things to happen so ignore lost focus events }}} {{{ vfsfilefilterrenderer v f s filter renderer }}} {{{ directoriesonlyfilter directories only filter }}} {{{ delayedendrequest delayed end request }}} }}} 
{{{ imports }}} {{{ jarclassloader j a r loader constructor for debugging }}} {{{ loadclass load keep going if was not found we remember which classes we don't because beanshell bean shell tries loading all possible <imported prefix> <class name> combinations if delegating reaching this statement means the was really not found otherwise we'll try loading from the parent loader }}} {{{ getresourceasstream get resource as stream try in current jar first then try from another jar finally try from the loader }}} {{{ getresource get resource }}} {{{ getresourceaspath get resource as path this must be fixed during plugin development }}} {{{ dump }}} {{{ tostring to }}} {{{ findresources find resources }}} {{{ finalize }}} {{{ members {{{ jarclassloader j a r loader constructor }}} {{{ activate }}} {{{ deactivate /* two plugins provide same class! */ /* two plugins provide same resource! */ }}} }}} {{{ members used to mark non existent classes in hash {{{ _loadclass }}} {{{ definepackage define clazz }}} {{{ getmfvalue get mf value }}} {{{ definepackage define packagename name manifest }}} {{{ loadfromparent load from parent }}} }}} 
/*
 * extendedgridlayout extended grid layout a grid layout manager with variable cell sizes
 * that supports colspans and rowspans
 * tabsize=4 tab size=4 indentsize=4 indent size=4 notabs=false no tabs=false 
 * folding=explicit collapsefolds=1 collapse folds=1 
 *
 * originally written by bj√∂rn kautler for the jedit j edit project this work has been
 * placed into the domain you may use this work in any way and for any
 * purpose you wish 
 *
 * this t h i s software s o f t w a r e is i s provided p r o vid e d as a s is i s without w i t h o u t warranty w a r r a n t y of o f any a n y kind k i n d not n o t even e v e n the
  t h e
 * implied i m p l i e d warranty w a r r a n t y of o f merchantability m e r c h a n t a b i l i t y the t h e author a u t h o r of o f this t h i s software s o f t w a r e assumes
  a s s u m e s
 * _no_ responsibility r e s p o n s i b i l i t y for f o r any a n y consequence c o n s e q u e n c e resulting r e s u l t i n g from f r o m the t h e use u s e modification m o d i f i c a t i o n 
 * or o r redistribution r e d i s t r i b u t i o n of o f this t h i s software s o f t w a r e 
 */ pass 1 build the grid pass 2 compute minimum preferred and maximum column widths / row heights pass 3 redistribute free space pass 4 layout components calculate the size that is available for redistribution calculate the amount of elements that can be resized without violating the minimum and maximum sizes and their current cumulated size if all elements are at their minimum or maximum size resize all elements to prevent an endless loop if the container gets resized to a very small amount resize the elements get the maximum of the minimum sizes the maximum of the preferred sizes and the minimum of the maximum sizes of all rows and columns not taking rowspans and colspans into account correct cases where minimumcolwidths minimum col widths col <= preferredcolwidths preferred col widths col <= maximumcolwidths maximum col widths col is not by clipping to the minimumcolwidths minimum col widths and maximumcolwidths maximum col widths plug in the colspans and correct the minimum preferred and maximum column widths the colspans are part of correct cases where minimumcolwidths minimum col widths col <= preferredcolwidths preferred col widths col <= maximumcolwidths maximum col widths col is not by clipping to the minimumcolwidths minimum col widths and maximumcolwidths maximum col widths correct cases where minimumrowheights minimum row heights row <= preferredrowheights preferred row heights row <= maximumrowheights maximum row heights row is not by clipping to the minimumrowheights minimum row heights and maximumrowheights maximum row heights plug in the rowspans and correct the minimum preferred and maximum row heights the rowspans are part of correct cases where minimumrowheights minimum row heights row <= preferredrowheights preferred row heights row <= maximumrowheights maximum row heights row is not by clipping to the minimumrowheights minimum row heights and maximumrowheights maximum row heights copies the computed sizes to the result arrays sums up the sizes for value add space between components or between componetns and the borders of the parent container clip the size to max_value if too big put the parent's components in source rows initialize the rowiterators row iterators gridrowiterators grid row iterators and gridrows grid rows build the grid look for a rowspan in the previous row look for a colspan in the previous column add a new element or check the last gridrow grid row for rowspans and probably add rows for these 
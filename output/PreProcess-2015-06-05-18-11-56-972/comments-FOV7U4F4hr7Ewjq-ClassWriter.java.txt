initializer /* to generate the above string

 sbyte_insn instructions
 b constants newarray n e w a r r a y = sbyte_insn 
 b constants bipush b i p u s h = sbyte_insn 

 short_insn instructions
 b constants sipush s i p u s h = short_insn 

 impl i m p l var_insn instructions
 b constants ret r e t = var_insn 
 for i = constants iload i l o a d i <= constants aload a l o a d ++i {
 b i = var_insn 
 }
 for i = constants istore i s t o r e i <= constants astore a s t o r e ++i {
 b i = var_insn 
 }
 for i = 26 i <= 45 ++i { iload_0 to aload_3
 b i = implvar_insn 
 }
 for i = 59 i <= 78 ++i { istore_0 to astore_3
 b i = implvar_insn 
 }

 type_insn instructions
 b constants new n e w = type_insn 
 b constants anewarray a n e w a r r a y = type_insn 
 b constants checkcast c h e c k c a s t = type_insn 
 b constants instanceof i n s t a n c e o f = type_insn 

 set fieldormeth_insn instructions
 for i = constants getstatic g e t s t a t i c i <= constants invokestatic i n v o k e s t a t i c ++i {
 b i = fieldormeth_insn 
 }
 b constants invokeinterface i n v o k e i n t e r f a c e = itfmeth_insn 

 label l a b e l w _insn instructions
 for i = constants ifeq i f e q i <= constants jsr j s r ++i {
 b i = label_insn 
 }
 b constants ifnull i f n u l l = label_insn 
 b constants ifnonnull i f n o n n u l l = label_insn 
 b 200 = labelw_insn goto_w
 b 201 = labelw_insn jsr_w
 temporary opcodes used internally by asm a s m see label and codewriter
  writer
 for i = 202 i < 220 ++i {
 b i = label_insn 
 }

 ldc l d c _w instructions
 b constants ldc l d c = ldc_insn 
 b 19 = ldcw_insn ldc_w
 b 20 = ldcw_insn ldc2_w

 special instructions
 b constants iinc i i n c = iinc_insn 
 b constants tableswitch t a b l e s w i t c h = tabl_insn 
 b constants lookupswitch l o o k u p s w i t c h = look_insn 
 b constants multianewarray m u l t i a n e w a r r a y = mana_insn 
 b 196 = wide_insn wide

  wid e

 for i = 0 i < b length ++i {
 err print char 'a' ' a' + b i 
 }
 err 
 */ constructor of the classvisitor visitor other computes the real size of the bytecode of this allocates a byte vector of this size in order to avoid unnecessary arraycopy operations in the bytevector byte vector enlarge utility constant pool management 
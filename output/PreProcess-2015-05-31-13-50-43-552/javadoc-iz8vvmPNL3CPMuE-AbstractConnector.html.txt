draw abstractconnector connector abstractconnector connector abstractconnector connector abstractconnector connector figure owner setconnecttodecorator set connect to decorator newvalue new value isconnecttodecorator is connect to decorator setvisible set visible newvalue new value isvisible is visible figure getconnectortarget get connector target figure f contains geom point2d point2 d p draw graphics2d graphics2 d g geom point2d point2 d findstart find start connectionfigure connection figure connection geom point2d point2 d findend find end connectionfigure connection figure connection geom point2d point2 d findpoint find point connectionfigure connection figure connection geom rectangle2d rectangle2 d getbounds get bounds figure getowner get owner setowner set owner figure newvalue new value clone updatestartlocation update start location geom point2d point2 d p updateendlocation update end location geom point2d point2 d p geom point2d point2 d getanchor get anchor updateanchor update anchor geom point2d point2 d p read dominput dom input in io ioexception i o write domoutput dom output out io ioexception i o all io serializable cloneable connector domstorable dom storable direct known subclasses chopboxconnector chop box connector locatorconnector locator connector abstractconnector connector implements connector see also connector serialized form constructs a connector that has no owner it is only used internally to resurrect a connectors from a storableoutput storable output it should never be called directly constructs a connector with the given owner figure tests if a point is contained in the connector specified by contains in connector draws this connector by default connectors are invisible specified by draw in connector description copied from connector finds the start point for the connection specified by findstart find start in connector description copied from connector finds the end point for the connection specified by findend find end in connector gets the connection point override when the connector does not need to distinguish between the start and end point of a connection description copied from connector gets the display box of the connector specified by getbounds get bounds in connector gets the connector's owner specified by getowner get owner in connector sets the connector's owner description copied from connector a clone of the connection specified by clone in connector clone in this is called when the start location of the connection has been moved by the user the user has this probably done to adjust the layout the connector may use this as a hint to improve the results for the next call to findend find end this is called when the end location of the connection has been moved by the user the user has this probably done to adjust the layout the connector may use this as a hint to improve the results for the next call to findstart find start description copied from connector gets the anchor of the connector this is a point at the center or at the bounds of the figure where the start or the end point will most likely be attached the purpose of this is to give the user a hint where the connector will most likely be attached to the owner of the connector specified by getanchor get anchor in connector description copied from connector updates the anchor of the connector this is called when the user manually changes the end point of the connectionfigure connection figure the connector can use this as a hint where the user wants to place the start or end point of the connectionfigure connection figure specified by updateanchor update anchor in connector specified by read in domstorable dom storable io ioexception i o specified by write in domstorable dom storable io ioexception i o 
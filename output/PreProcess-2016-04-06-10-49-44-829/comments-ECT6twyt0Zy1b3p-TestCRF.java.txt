todo t o d o gsc 08/25/08 some tests fail because tests are using crftrainerbylabellikelihood c r f trainer by label likelihood instead of crfoptimizablebylabellikelihood c r f optimizable by label likelihood and crfoptimizablebyvaluegradients c r f optimizable by value gradients state0 self transition state0 >state1 state1 self transition state1 >state0 we start in state0 we go to state1 and on through a self transition gammas at all times sum to 1 0 xis at all times sum to 1 0 state0 self transition state0 >state1 state1 self transition state1 >state0 we start in state0 we go to state1 and on through a self transition to state1 again should print at end 4 4 3 unconstrainedweight=2912 unconstrained weight=2912 0 constrainedweight=428 constrained weight=428 0 maxweight=35770 max weight=35770 0 mingrad=520 min grad=520 0 create a to store the crf c r f inputalphabet input alphabet = feature alphabet crf getinputalphabet get input alphabet and read it back in out unconstrainedcost= unconstrained cost= +unconstrainedcost+ +unconstrained cost+ constrainedcost= constrained cost= +constrainedcost +constrained cost startlabelindex start label index = as getalphabet get alphabet lookupindex lookup index start testoptimizable test optimizable testvalueandgradient test value and gradient minable testoptimizable test optimizable testvalueandgradientindirection test value and gradient in direction optable gradient testoptimizable test optimizable testvalueandgradientcurrentparameters test value and gradient current optable this tests at current and at purturbed toward the gradient and read it back in original test had this conjunction in it too {1} { 1 0} {0 1} {0 1} i'd like to comment out this next line to make it run faster but then we'd need to adjust likelihood and accuracy test values akm 12/2007 todo t o d o uncomment this line { 2 1 0} {0 1 2} { 3 2 1} {1 2 3} these were commented before { 2 1} { 1 0} {0 1} {1 2} { 3 2 1} { 2 1 0} { 1 0 1} {0 1 2} {1 2 3} new printinputandtarget print input and target compare 3 crfs c r fs trained with addordernstates add order n states and make sure that having more features leads to a higher likelihood prevent cached values do this elaborate thing so that crf cachedvaluestale cached value stale is forced freeze some weights before training check that the frozen weights has worse likelihood either fixed learning rate or selected on a sample crft setlearningrate set learning rate 0 01 first do normal training for getting weights either fixed learning rate or selected on a sample crft setlearningrate set learning rate 0 01 now check the speeds of sumlatticedefault sum lattice default vs sumlatticescaling sum lattice scaling check that total weight is same check that gammas check that xis match make a copy of this crf c r f tests that setweightsdimensiondensely set weights dimension densely respects featureselections feature selections test that dense observations wights aren't added for default feature edges set weights dimension set weights dimension let's get some this used to be memm m e m m makespacepredictionpipe make space prediction pipe but i don't know why akm 12/2007 this used to be memm m e m m data but i don't know why akm 12/2007 check that the notstart state is used at test time now add infinite weight onto a transition and make sure that it's honored verify that this effectively prevents the notstart state from being used 
xxx need a more principled stopping point tolerance = 0001 the number of corrections used in bfgs b f g s update ideally 3 <= m <= 7 larger m means more cpu time memory line search function state of search g = gradient s = list of m previous values y = list of m previous g values rho = intermediate calculation cpal c p a l added this first time through make initial jump testmaximizable test maximizable testvalueandgradientindirection test value and gradient in direction maxable direction could not step in this direction give up and say converged reset search get difference between previous 2 gradients and inf inf = 0 inf inf = 0 si * yi scaling factor calculate new direction testmaximizable test maximizable testvalueandgradientindirection test value and gradient in direction maxable direction could not step in this direction reset search xxx temporary test passed ok o k 				testmaximizable 				 test maximizable testvalueandgradientindirection test value and gradient in direction maxable direction 	return test for terminations throw new illegalstateexception illegal state too many iterations end of iteration call evaluator remove oldest matrix and add newset to end of list to make this more efficient actually overwrite memory of oldest matrix this overwrites the oldest matrix this readjusts the pointers in the list pop old and add new 